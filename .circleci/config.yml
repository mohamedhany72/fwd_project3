version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@4.1.0
  aws-cli: circleci/aws-cli@1.3.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      - checkout
      - aws-cli/setup
      # install dependencies in both apps
      - run:
          name: Front-End Install
          command: |
            npm run frontend:install
      - run:
          name: Back-End Install
          command: |
            npm run backend:install
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: Back-End Build
          command: |
            npm run backend:build
      - run:
          name: Front-End Host on s3
          command: | 
            aws s3 cp --recursive --acl public-read ./udagram-frontend/www s3://udagram99/
      - run:
          name: Installing deployment dependencies
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python3-pip python3-dev build-essential
            sudo pip install --upgrade setuptools
            sudo pip install awsebcli --upgrade
      - run:
            name: Deploying
            command: cd udagram-api && eb deploy Udagram-env
      - run:
            name: set EB ENVs
            command: eb init udagram -r us-east-1 && eb setenv AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY AWS_BUCKET=$AWS_BUCKET AWS_PROFILE=$AWS_PROFILE JWT_SECRET=$JWT_SECRET POSTGRES_DB=$POSTGRES_DB POSTGRES_HOST=$POSTGRES_HOST POSTGRES_PASSWORD=$POSTGRES_PASSWORD && PORT=$PORT POSTGRES_PORT=$POSTGRES_PORT POSTGRES_USERNAME=$POSTGRES_USERNAME URL=$URL

workflows:
    build-and-deploy:
      jobs:
        - build:
            filters:
              branches:
                only:
                  - main